<?xml version='1.0' encoding='UTF-8'?>
<odoo noupdate="1">

    <record id="automated_action_adjust_exchange_differential" model="base.automation">
        <field name="name">Exchange Differential Adjust</field>
        <field name="model_id" model="ir.model" search="[('model', '=', 'stock.landed.cost')]"/>
        <field name="state">code</field>
        <field name="code">
landed = env['stock.landed.cost']
if object.state == 'done' and object.is_pedimento == True:
    for pick in object.picking_ids:
        new = landed.adjust_cost_for_exchange_differential(pick, object.date)
        if new.id:
            object.write({'exchange_landed_ids': [(4, new.id)]})
        </field>
        <field name="trigger">on_write</field>
        <field name="active" eval="True"/>
    </record>

    <record id="automated_action_adjust_exchange_differential_invoice" model="base.automation">
        <field name="name">Exchange Differential Adjust Invoice</field>
        <field name="model_id" model="ir.model" search="[('model', '=', 'account.invoice')]"/>
        <field name="state">code</field>
        <field name="code">
landed = env['stock.landed.cost']
if (object.state == 'open' and object.currency_id != object.company_id.currency_id and object.partner_id.country_id == object.company_id.country_id and object.type == 'in_invoice' and not object.exchange_landed_ids):
    new = landed.adjust_cost_for_exchange_differential(object, object.date_invoice)
    if new.id:
        object.write({'exchange_landed_ids': [(4, new.id)]})
        </field>
        <field name="trigger">on_write</field>
        <field name="active" eval="True"/>
    </record>

</odoo>
